
package org.tempuri;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "RHINWebService", targetNamespace = "http://tempuri.org/", wsdlLocation = "C:\\HIEGateway\\Adapters-Source\\HIEN\\SRC\\HIENDocRetrievAdapter/src/main/resources/wsdl/RHINWebService1.wsdl")
public class RHINWebService
    extends Service
{

    private final static URL RHINWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException RHINWEBSERVICE_EXCEPTION;
    private final static QName RHINWEBSERVICE_QNAME = new QName("http://tempuri.org/", "RHINWebService");

    static {
        RHINWEBSERVICE_WSDL_LOCATION = org.tempuri.RHINWebService.class.getResource("C:\\HIEGateway\\Adapters-Source\\HIEN\\SRC\\HIENDocRetrievAdapter/src/main/resources/wsdl/RHINWebService1.wsdl");
        WebServiceException e = null;
        if (RHINWEBSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'C:\\\\HIEGateway\\\\Adapters-Source\\\\HIEN\\\\SRC\\\\HIENDocRetrievAdapter/src/main/resources/wsdl/RHINWebService1.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        RHINWEBSERVICE_EXCEPTION = e;
    }

    public RHINWebService() {
        super(__getWsdlLocation(), RHINWEBSERVICE_QNAME);
    }

    public RHINWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), RHINWEBSERVICE_QNAME, features);
    }

    public RHINWebService(URL wsdlLocation) {
        super(wsdlLocation, RHINWEBSERVICE_QNAME);
    }

    public RHINWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RHINWEBSERVICE_QNAME, features);
    }

    public RHINWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RHINWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IRHINWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IRHINWebService")
    public IRHINWebService getWSHttpBindingIRHINWebService() {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_IRHINWebService"), IRHINWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IRHINWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IRHINWebService")
    public IRHINWebService getWSHttpBindingIRHINWebService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_IRHINWebService"), IRHINWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RHINWEBSERVICE_EXCEPTION!= null) {
            throw RHINWEBSERVICE_EXCEPTION;
        }
        return RHINWEBSERVICE_WSDL_LOCATION;
    }

}
